// Generated from GPoProp.g4 by ANTLR 4.4
package parse.common;
   


import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class GPoPropLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PROP_PO=1, PROP_GPO=2, POCTL_NEXT=3, POCTL_UNTIL=4, POCTL_EVENTUALLY=5, 
		POCTL_ALWAYS=6, POCTL_AND=7, POCTL_OR=8, POCTL_NEGATON=9, POCTL_TRUE=10, 
		K_INT=11, K_DOUBLE=12, K_FLOAT=13, K_BOOLEAN=14, K_VOID=15, ID=16, NUMBER=17, 
		FLOAT=18, INT=19, STRING=20, BOOL=21, EQUAL=22, GREATER=23, GREATEREQUAL=24, 
		LESSER=25, LESSEREQUAL=26, BRACELEFT=27, BRACERIGHT=28, BRACKETLEFT=29, 
		BRACKETRIGHT=30, PARENLEFT=31, PARENRIGHT=32, SEMICONLON=33, COLON=34, 
		DOTDOT=35, MUL=36, DIV=37, ADD=38, SUB=39, WS=40, COMMENT=41, LINE_COMMENT=42, 
		JING_COMMENT=43;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'"
	};
	public static final String[] ruleNames = {
		"PROP_PO", "PROP_GPO", "POCTL_NEXT", "POCTL_UNTIL", "POCTL_EVENTUALLY", 
		"POCTL_ALWAYS", "POCTL_AND", "POCTL_OR", "POCTL_NEGATON", "POCTL_TRUE", 
		"K_INT", "K_DOUBLE", "K_FLOAT", "K_BOOLEAN", "K_VOID", "ID", "NUMBER", 
		"FLOAT", "INT", "STRING", "BOOL", "EQUAL", "GREATER", "GREATEREQUAL", 
		"LESSER", "LESSEREQUAL", "BRACELEFT", "BRACERIGHT", "BRACKETLEFT", "BRACKETRIGHT", 
		"PARENLEFT", "PARENRIGHT", "SEMICONLON", "COLON", "DOTDOT", "MUL", "DIV", 
		"ADD", "SUB", "ESC", "UNICODE", "HEX", "ID_LETTER", "NOZERODIGIT", "DIGIT", 
		"EXP", "WS", "COMMENT", "LINE_COMMENT", "JING_COMMENT"
	};

	   



	public GPoPropLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "GPoProp.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2-\u014c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\3\2\3\2"+
		"\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17"+
		"\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\7\21\u00a3\n\21\f\21\16"+
		"\21\u00a6\13\21\3\21\5\21\u00a9\n\21\3\22\5\22\u00ac\n\22\3\22\3\22\3"+
		"\22\3\22\5\22\u00b2\n\22\3\22\5\22\u00b5\n\22\3\22\3\22\3\22\3\22\5\22"+
		"\u00bb\n\22\3\22\5\22\u00be\n\22\3\23\5\23\u00c1\n\23\3\23\3\23\3\23\3"+
		"\23\3\24\6\24\u00c8\n\24\r\24\16\24\u00c9\3\25\3\25\3\25\7\25\u00cf\n"+
		"\25\f\25\16\25\u00d2\13\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30\3\30"+
		"\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36"+
		"\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3"+
		"(\3)\3)\3)\5)\u0103\n)\3*\3*\3*\3*\3*\3*\3+\3+\3,\5,\u010e\n,\3-\3-\3"+
		".\3.\3/\3/\5/\u0116\n/\3/\3/\3\60\6\60\u011b\n\60\r\60\16\60\u011c\3\60"+
		"\3\60\3\61\3\61\3\61\3\61\7\61\u0125\n\61\f\61\16\61\u0128\13\61\3\61"+
		"\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\7\62\u0133\n\62\f\62\16\62\u0136"+
		"\13\62\3\62\5\62\u0139\n\62\3\62\3\62\3\62\3\62\3\63\3\63\7\63\u0141\n"+
		"\63\f\63\16\63\u0144\13\63\3\63\5\63\u0147\n\63\3\63\3\63\3\63\3\63\5"+
		"\u0126\u0134\u0142\2\64\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q\2S\2U\2W\2Y\2[\2]\2_*a"+
		"+c,e-\3\2\f\4\2$$^^\4\2HHVV\n\2$$\61\61^^ddhhppttvv\5\2\62;CHch\5\2C\\"+
		"aac|\3\2\63;\3\2\62;\4\2GGgg\4\2--//\5\2\13\f\17\17\"\"\u0159\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2"+
		"\2\2e\3\2\2\2\3g\3\2\2\2\5j\3\2\2\2\7n\3\2\2\2\tp\3\2\2\2\13r\3\2\2\2"+
		"\rt\3\2\2\2\17v\3\2\2\2\21x\3\2\2\2\23z\3\2\2\2\25|\3\2\2\2\27\u0081\3"+
		"\2\2\2\31\u0085\3\2\2\2\33\u008c\3\2\2\2\35\u0092\3\2\2\2\37\u009a\3\2"+
		"\2\2!\u009f\3\2\2\2#\u00bd\3\2\2\2%\u00c0\3\2\2\2\'\u00c7\3\2\2\2)\u00cb"+
		"\3\2\2\2+\u00d5\3\2\2\2-\u00d7\3\2\2\2/\u00da\3\2\2\2\61\u00dc\3\2\2\2"+
		"\63\u00df\3\2\2\2\65\u00e1\3\2\2\2\67\u00e4\3\2\2\29\u00e6\3\2\2\2;\u00e8"+
		"\3\2\2\2=\u00ea\3\2\2\2?\u00ec\3\2\2\2A\u00ee\3\2\2\2C\u00f0\3\2\2\2E"+
		"\u00f2\3\2\2\2G\u00f4\3\2\2\2I\u00f7\3\2\2\2K\u00f9\3\2\2\2M\u00fb\3\2"+
		"\2\2O\u00fd\3\2\2\2Q\u00ff\3\2\2\2S\u0104\3\2\2\2U\u010a\3\2\2\2W\u010d"+
		"\3\2\2\2Y\u010f\3\2\2\2[\u0111\3\2\2\2]\u0113\3\2\2\2_\u011a\3\2\2\2a"+
		"\u0120\3\2\2\2c\u012e\3\2\2\2e\u013e\3\2\2\2gh\7R\2\2hi\7q\2\2i\4\3\2"+
		"\2\2jk\7I\2\2kl\7R\2\2lm\7q\2\2m\6\3\2\2\2no\7Z\2\2o\b\3\2\2\2pq\7W\2"+
		"\2q\n\3\2\2\2rs\7H\2\2s\f\3\2\2\2tu\7I\2\2u\16\3\2\2\2vw\7(\2\2w\20\3"+
		"\2\2\2xy\7~\2\2y\22\3\2\2\2z{\7P\2\2{\24\3\2\2\2|}\7v\2\2}~\7t\2\2~\177"+
		"\7w\2\2\177\u0080\7g\2\2\u0080\26\3\2\2\2\u0081\u0082\7k\2\2\u0082\u0083"+
		"\7p\2\2\u0083\u0084\7v\2\2\u0084\30\3\2\2\2\u0085\u0086\7f\2\2\u0086\u0087"+
		"\7q\2\2\u0087\u0088\7w\2\2\u0088\u0089\7d\2\2\u0089\u008a\7n\2\2\u008a"+
		"\u008b\7g\2\2\u008b\32\3\2\2\2\u008c\u008d\7h\2\2\u008d\u008e\7n\2\2\u008e"+
		"\u008f\7q\2\2\u008f\u0090\7c\2\2\u0090\u0091\7v\2\2\u0091\34\3\2\2\2\u0092"+
		"\u0093\7d\2\2\u0093\u0094\7q\2\2\u0094\u0095\7q\2\2\u0095\u0096\7n\2\2"+
		"\u0096\u0097\7g\2\2\u0097\u0098\7c\2\2\u0098\u0099\7p\2\2\u0099\36\3\2"+
		"\2\2\u009a\u009b\7x\2\2\u009b\u009c\7q\2\2\u009c\u009d\7k\2\2\u009d\u009e"+
		"\7f\2\2\u009e \3\2\2\2\u009f\u00a4\5W,\2\u00a0\u00a3\5W,\2\u00a1\u00a3"+
		"\5[.\2\u00a2\u00a0\3\2\2\2\u00a2\u00a1\3\2\2\2\u00a3\u00a6\3\2\2\2\u00a4"+
		"\u00a2\3\2\2\2\u00a4\u00a5\3\2\2\2\u00a5\u00a8\3\2\2\2\u00a6\u00a4\3\2"+
		"\2\2\u00a7\u00a9\7)\2\2\u00a8\u00a7\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9"+
		"\"\3\2\2\2\u00aa\u00ac\7/\2\2\u00ab\u00aa\3\2\2\2\u00ab\u00ac\3\2\2\2"+
		"\u00ac\u00ad\3\2\2\2\u00ad\u00ae\5\'\24\2\u00ae\u00af\7\60\2\2\u00af\u00b1"+
		"\5\'\24\2\u00b0\u00b2\5]/\2\u00b1\u00b0\3\2\2\2\u00b1\u00b2\3\2\2\2\u00b2"+
		"\u00be\3\2\2\2\u00b3\u00b5\7/\2\2\u00b4\u00b3\3\2\2\2\u00b4\u00b5\3\2"+
		"\2\2\u00b5\u00b6\3\2\2\2\u00b6\u00b7\5\'\24\2\u00b7\u00b8\5]/\2\u00b8"+
		"\u00be\3\2\2\2\u00b9\u00bb\7/\2\2\u00ba\u00b9\3\2\2\2\u00ba\u00bb\3\2"+
		"\2\2\u00bb\u00bc\3\2\2\2\u00bc\u00be\5\'\24\2\u00bd\u00ab\3\2\2\2\u00bd"+
		"\u00b4\3\2\2\2\u00bd\u00ba\3\2\2\2\u00be$\3\2\2\2\u00bf\u00c1\7/\2\2\u00c0"+
		"\u00bf\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00c3\5\'"+
		"\24\2\u00c3\u00c4\7\60\2\2\u00c4\u00c5\5\'\24\2\u00c5&\3\2\2\2\u00c6\u00c8"+
		"\5[.\2\u00c7\u00c6\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9\u00c7\3\2\2\2\u00c9"+
		"\u00ca\3\2\2\2\u00ca(\3\2\2\2\u00cb\u00d0\7$\2\2\u00cc\u00cf\5Q)\2\u00cd"+
		"\u00cf\n\2\2\2\u00ce\u00cc\3\2\2\2\u00ce\u00cd\3\2\2\2\u00cf\u00d2\3\2"+
		"\2\2\u00d0\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2\u00d1\u00d3\3\2\2\2\u00d2"+
		"\u00d0\3\2\2\2\u00d3\u00d4\7$\2\2\u00d4*\3\2\2\2\u00d5\u00d6\t\3\2\2\u00d6"+
		",\3\2\2\2\u00d7\u00d8\7?\2\2\u00d8\u00d9\7?\2\2\u00d9.\3\2\2\2\u00da\u00db"+
		"\7@\2\2\u00db\60\3\2\2\2\u00dc\u00dd\7@\2\2\u00dd\u00de\7?\2\2\u00de\62"+
		"\3\2\2\2\u00df\u00e0\7>\2\2\u00e0\64\3\2\2\2\u00e1\u00e2\7>\2\2\u00e2"+
		"\u00e3\7?\2\2\u00e3\66\3\2\2\2\u00e4\u00e5\7}\2\2\u00e58\3\2\2\2\u00e6"+
		"\u00e7\7\177\2\2\u00e7:\3\2\2\2\u00e8\u00e9\7]\2\2\u00e9<\3\2\2\2\u00ea"+
		"\u00eb\7_\2\2\u00eb>\3\2\2\2\u00ec\u00ed\7*\2\2\u00ed@\3\2\2\2\u00ee\u00ef"+
		"\7+\2\2\u00efB\3\2\2\2\u00f0\u00f1\7=\2\2\u00f1D\3\2\2\2\u00f2\u00f3\7"+
		"<\2\2\u00f3F\3\2\2\2\u00f4\u00f5\7\60\2\2\u00f5\u00f6\7\60\2\2\u00f6H"+
		"\3\2\2\2\u00f7\u00f8\7,\2\2\u00f8J\3\2\2\2\u00f9\u00fa\7\61\2\2\u00fa"+
		"L\3\2\2\2\u00fb\u00fc\7-\2\2\u00fcN\3\2\2\2\u00fd\u00fe\7/\2\2\u00feP"+
		"\3\2\2\2\u00ff\u0102\7^\2\2\u0100\u0103\t\4\2\2\u0101\u0103\5S*\2\u0102"+
		"\u0100\3\2\2\2\u0102\u0101\3\2\2\2\u0103R\3\2\2\2\u0104\u0105\7w\2\2\u0105"+
		"\u0106\5U+\2\u0106\u0107\5U+\2\u0107\u0108\5U+\2\u0108\u0109\5U+\2\u0109"+
		"T\3\2\2\2\u010a\u010b\t\5\2\2\u010bV\3\2\2\2\u010c\u010e\t\6\2\2\u010d"+
		"\u010c\3\2\2\2\u010eX\3\2\2\2\u010f\u0110\t\7\2\2\u0110Z\3\2\2\2\u0111"+
		"\u0112\t\b\2\2\u0112\\\3\2\2\2\u0113\u0115\t\t\2\2\u0114\u0116\t\n\2\2"+
		"\u0115\u0114\3\2\2\2\u0115\u0116\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0118"+
		"\5\'\24\2\u0118^\3\2\2\2\u0119\u011b\t\13\2\2\u011a\u0119\3\2\2\2\u011b"+
		"\u011c\3\2\2\2\u011c\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u011e\3\2"+
		"\2\2\u011e\u011f\b\60\2\2\u011f`\3\2\2\2\u0120\u0121\7\61\2\2\u0121\u0122"+
		"\7,\2\2\u0122\u0126\3\2\2\2\u0123\u0125\13\2\2\2\u0124\u0123\3\2\2\2\u0125"+
		"\u0128\3\2\2\2\u0126\u0127\3\2\2\2\u0126\u0124\3\2\2\2\u0127\u0129\3\2"+
		"\2\2\u0128\u0126\3\2\2\2\u0129\u012a\7,\2\2\u012a\u012b\7\61\2\2\u012b"+
		"\u012c\3\2\2\2\u012c\u012d\b\61\2\2\u012db\3\2\2\2\u012e\u012f\7\61\2"+
		"\2\u012f\u0130\7\61\2\2\u0130\u0134\3\2\2\2\u0131\u0133\13\2\2\2\u0132"+
		"\u0131\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0135\3\2\2\2\u0134\u0132\3\2"+
		"\2\2\u0135\u0138\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0139\7\17\2\2\u0138"+
		"\u0137\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013b\7\f"+
		"\2\2\u013b\u013c\3\2\2\2\u013c\u013d\b\62\2\2\u013dd\3\2\2\2\u013e\u0142"+
		"\7%\2\2\u013f\u0141\13\2\2\2\u0140\u013f\3\2\2\2\u0141\u0144\3\2\2\2\u0142"+
		"\u0143\3\2\2\2\u0142\u0140\3\2\2\2\u0143\u0146\3\2\2\2\u0144\u0142\3\2"+
		"\2\2\u0145\u0147\7\17\2\2\u0146\u0145\3\2\2\2\u0146\u0147\3\2\2\2\u0147"+
		"\u0148\3\2\2\2\u0148\u0149\7\f\2\2\u0149\u014a\3\2\2\2\u014a\u014b\b\63"+
		"\2\2\u014bf\3\2\2\2\30\2\u00a2\u00a4\u00a8\u00ab\u00b1\u00b4\u00ba\u00bd"+
		"\u00c0\u00c9\u00ce\u00d0\u0102\u010d\u0115\u011c\u0126\u0134\u0138\u0142"+
		"\u0146\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}